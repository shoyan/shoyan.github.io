<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Laravel | SHOYAN BLOG]]></title>
  <link href="http://48n.jp/blog/categories/laravel/atom.xml" rel="self"/>
  <link href="http://48n.jp/"/>
  <updated>2018-12-07T17:09:10+09:00</updated>
  <id>http://48n.jp/</id>
  <author>
    <name><![CDATA[Shohei Yamasaki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[LaravelをMacにインストールして起動する手順]]></title>
    <link href="http://48n.jp/blog/2016/04/28/first-step-in-laravel/"/>
    <updated>2016-04-28T13:36:36+09:00</updated>
    <id>http://48n.jp/blog/2016/04/28/first-step-in-laravel</id>
    <content type="html"><![CDATA[<p>PHPで人気のフレームワーク、<a href="https://laravel.com/">Laravel</a>を手元のPCにインストールして起動するチュートリアルです。<br />
冗長な説明を除きLaravelを動かすために重要な部分のみ解説することでスピーディにLaravelを動作できるようにしています。</p>

<h3 id="laravelのインストール">Laravelのインストール</h3>

<p>まずはcomposerでlaravelコマンドをインストールします。</p>

<pre><code class="language-php">⇒  composer global require "laravel/installer"
Changed current directory to /Users/PMAC025S/.composer

Using version ^1.3 for laravel/installer
./composer.json has been created
Loading composer repositories with package information
Updating dependencies (including require-dev)
  - Installing symfony/process (v3.0.4)
    Downloading: 100%

  - Installing symfony/polyfill-mbstring (v1.1.1)
    Loading from cache

  - Installing symfony/console (v3.0.4)
    Downloading: 100%

  - Installing guzzlehttp/promises (1.1.0)
    Downloading: 100%

  - Installing psr/http-message (1.0)
    Loading from cache

  - Installing guzzlehttp/psr7 (1.3.0)
    Downloading: 100%

  - Installing guzzlehttp/guzzle (6.2.0)
    Downloading: 100%

  - Installing laravel/installer (v1.3.3)
    Downloading: 100%

symfony/console suggests installing symfony/event-dispatcher ()
symfony/console suggests installing psr/log (For using the console logger)
Writing lock file
Generating autoload files

</code></pre>

<p><code>.bashrc</code> や <code>.zshrc</code> にパスを追加します。</p>

<pre><code>export PATH="$PATH:/Users/PMAC025S/.composer/vendor/bin"

</code></pre>

<p>これでlaravelコマンドが実行できるようになります。</p>

<pre><code>⇒  laravel
Laravel Installer version 1.3.3

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display this help message
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi            Force ANSI output
      --no-ansi         Disable ANSI output
  -n, --no-interaction  Do not ask any interactive question
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  help  Displays help for a command
  list  Lists commands
  new   Create a new Laravel application.

</code></pre>

<p><code>laravel new application_name</code> でインストールします。</p>

<pre><code>⇒  laravel new blog
Crafting application...

</code></pre>

<p>以下の構成で作成されています。</p>

<pre><code>⇒  tree -L 1 blog
blog
├── app
├── artisan
├── bootstrap
├── composer.json
├── composer.lock
├── config
├── database
├── gulpfile.js
├── package.json
├── phpunit.xml
├── public
├── readme.md
├── resources
├── server.php
├── storage
├── tests
└── vendor

</code></pre>

<h2 id="設定">設定</h2>

<p>設定情報は<code>config</code>ディレクトリに保存します。<br />
今回は設定を変更しません。</p>

<h2 id="データベースを準備する">データベースを準備する</h2>
<h3 id="データベースのマイグレーション">データベースのマイグレーション</h3>

<p>Laravelに同梱されているartisanというツールを使って作成します。</p>

<pre><code>⇒  php artisan make:migration create_tasks_table --create=tasks
Created Migration: 2016_04_28_011840_create_tasks_table

</code></pre>

<p><code>database/migrations</code>ディレクトリに作成されます。<br />
2016_04_28_011840_の部分はartisanが作成するので、makeするタイミングによって変わります。</p>

<p><code>2016_04_28_011840_create_tasks_table.php</code>を編集して、nameカラムを追加します。</p>

<pre><code>&lt;?php

use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreateTasksTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('tasks', function (Blueprint $table) {
            $table-&gt;increments('id');
            $table-&gt;string('name');
            $table-&gt;timestamps();
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::drop('tasks');
    }
}

</code></pre>

<p><code>.env</code>ファイルのデータベースの設定を自分のローカルのPCのmysqlに変更します。  <br />
デフォルトでは、<a href="https://laravel.com/docs/5.2/homestead">Homestead</a>というLaravel開発用の仮想環境の設定です(今回は使いません)。</p>

<pre><code>DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=homestead
DB_USERNAME=root
DB_PASSWORD=

</code></pre>

<p>マイグレーションを実行します。</p>

<pre><code>⇒  php artisan migrate
Migration table created successfully.
Migrated: 2014_10_12_000000_create_users_table
Migrated: 2014_10_12_100000_create_password_resets_table
Migrated: 2016_04_28_011840_create_tasks_table

</code></pre>

<h3 id="モデルを作成する">モデルを作成する</h3>

<p>Laravelは<a href="https://laravel.com/docs/5.2/eloquent">Eloquent</a>というORMがデフォルトで使われるようになっています。</p>

<p>artisanでモデルを作成します。</p>

<pre><code>⇒  php artisan make:model Task
Model created successfully.

</code></pre>

<p>モデルは <code>app</code> ディレクトリ配下に作成されます。</p>

<h3 id="ルーティング">ルーティング</h3>

<p>ルーティングの設定は、<code>app/Http/routes.php</code>に定義します。<br />
(ルーティングの設定はsinatraっぽい)</p>

<pre><code>&lt;?php

use App\Task;
use Illuminate\Http\Request;

/**
 * Show Task Dashboard
 */
Route::get('/', function () {
    return view('tasks');
});

/**
 * Add New Task
 */
Route::post('/task', function (Request $request) {
    //
});

/**
 * Delete Task
 */
Route::delete('/task/{task}', function (Task $task) {
    //
});

</code></pre>

<h3 id="viewの設定">Viewの設定</h3>

<p>Larvelはデフォルトで<a href="https://laravel.com/docs/5.2/blade">Blade</a>というテンプレートエンジンを使います。  <br />
viewのディレクトリは<code>resources/views</code>です。</p>

<pre><code>$ mkdir resources/views/layouts

</code></pre>

<p>全体のレイアウトのテンプレートとして使う<code>app.blade.php</code>を作成します。</p>

<pre><code> &lt;!-- resources/views/layouts/app.blade.php --&gt;

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
    &lt;head&gt;
        &lt;title&gt;Laravel Quickstart - Basic&lt;/title&gt;

        &lt;!-- CSS And JavaScript --&gt;
    &lt;/head&gt;

    &lt;body&gt;
        &lt;div class="container"&gt;
            &lt;nav class="navbar navbar-default"&gt;
                &lt;!-- Navbar Contents --&gt;
            &lt;/nav&gt;
        &lt;/div&gt;

        @yield('content')
    &lt;/body&gt;
&lt;/html&gt;

</code></pre>

<p><code>tasks.blade.php</code>を作成します。</p>

<pre><code> &lt;!-- resources/views/tasks.blade.php --&gt;

@extends('layouts.app')

@section('content')

    &lt;!-- Bootstrap Boilerplate... --&gt;

    &lt;div class="panel-body"&gt;
        &lt;!-- Display Validation Errors --&gt;

        &lt;!-- New Task Form --&gt;
        &lt;form action="" method="POST" class="form-horizontal"&gt;
            {!! csrf_field() !!}

            &lt;!-- Task Name --&gt;
            &lt;div class="form-group"&gt;
                &lt;label for="task" class="col-sm-3 control-label"&gt;Task&lt;/label&gt;

                &lt;div class="col-sm-6"&gt;
                    &lt;input type="text" name="name" id="task-name" class="form-control"&gt;
                &lt;/div&gt;
            &lt;/div&gt;

            &lt;!-- Add Task Button --&gt;
            &lt;div class="form-group"&gt;
                &lt;div class="col-sm-offset-3 col-sm-6"&gt;
                    &lt;button type="submit" class="btn btn-default"&gt;
                        &lt;i class="fa fa-plus"&gt;&lt;/i&gt; Add Task
                    &lt;/button&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/form&gt;
    &lt;/div&gt;

    &lt;!-- TODO: Current Tasks --&gt;
@endsection

</code></pre>

<h3 id="サーバーを起動する">サーバーを起動する</h3>

<p>さて、一通りの設定が整いました。  <br />
サーバーを起動してブラウザで確認してみましょう。  <br />
以下のコマンドでサーバーを起動します。</p>

<pre><code>⇒  php artisan serve
Laravel development server started on http://localhost:8000/

</code></pre>

<p><code>http://localhost:8000/</code> にブラウザでアクセスします。</p>

<p>Taskという文字とフォームが表示されれば成功です！</p>

<iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=syoyama-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=4844339451&amp;linkId=3602fd744613779ea0da0a7b2834983c"></iframe>

<iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=syoyama-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=4774173134&amp;linkId=8a4652f77ca59ebb2ab2adf95f685aef"></iframe>

<h3 id="参考文献">参考文献</h3>

<ul>
  <li>
    <p><a href="https://laravel.com/docs/5.2">https://laravel.com/docs/5.2</a></p>  </li>
  <li>
    <p><a href="https://laravel.com/docs/5.2/quickstart">https://laravel.com/docs/5.2/quickstart</a></p>  </li>
</ul>

]]></content>
  </entry>
  
</feed>
