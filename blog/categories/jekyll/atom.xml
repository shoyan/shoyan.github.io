<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Jekyll | SHOYAN BLOG]]></title>
  <link href="https://48n.jp/blog/categories/jekyll/atom.xml" rel="self"/>
  <link href="https://48n.jp/"/>
  <updated>2019-10-06T20:10:00+09:00</updated>
  <id>https://48n.jp/</id>
  <author>
    <name><![CDATA[Shohei Yamasaki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[JekyllテーマのminimaをAMP対応した]]></title>
    <link href="https://48n.jp/blog/2017/04/14/aminima-is-minima-with-amp/"/>
    <updated>2017-04-14T15:11:53+09:00</updated>
    <id>https://48n.jp/blog/2017/04/14/aminima-is-minima-with-amp</id>
    <content type="html"><![CDATA[<p>こんにちは、SHOYANです。</p>

<p>JekyllテーマのminimaをAMP対応しました。</p>

<ul>
  <li>
    <p><a href="https://github.com/shoyan/aminima">https://github.com/shoyan/aminima</a></p>  </li>
</ul>

<p>名前は AMP + Minima = AMinima です。</p>

<p>デモサイトも用意していてこちらで確認できます。</p>

<ul>
  <li>
    <p><a href="https://shoyan.github.io/aminima/">https://shoyan.github.io/aminima/</a></p>  </li>
</ul>

<h2 id="minimaとは">Minimaとは</h2>

<p>MinimaはJekyllのテーマです。<br />
jekyll new で作成した場合にデフォルトでインストールされるテーマです。<br />
URLはこちらです。</p>

<ul>
  <li>
    <p><a href="https://github.com/jekyll/minima">https://github.com/jekyll/minima</a></p>  </li>
</ul>

<h2 id="どのようにamp対応したのか">どのようにAMP対応したのか</h2>

<p>どのようにAMP対応をしたのかを説明します。<br />
わりとあっさりできました。</p>

<p>まず、ampを宣言します。</p>

<pre><code class="language-html">&lt;html amp&gt;
</code></pre>

<p>そして、charsetを定義します。</p>

<pre><code class="language-html">&lt;meta charset="utf-8"&gt;
</code></pre>

<p>次にampランタイムをロードします。</p>

<pre><code class="language-html">&lt;script async src="https://cdn.ampproject.org/v0.js"&gt;&lt;/script&gt;
</code></pre>

<p>また、AMPはcanonicalの宣言が必要なので定義します。</p>

<pre><code class="language-html">&lt;link rel="canonical" href="https://shoyan.github.io/aminima/2016/05/20/welcome-to-jekyll.html"&gt;
</code></pre>

<p>CSSはインラインで定義しないといけないのでインラインで定義します。</p>

<pre><code class="language-html">&lt;style amp-custom
  h1 {
    color: red;
  }
&lt;/style
</code></pre>

<p>次にAMP boilerplateを定義します。</p>

<pre><code class="language-html">&lt;style amp-boilerplatebody{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}&lt;/style&lt;noscript&lt;style amp-boilerplatebody{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}&lt;/style&lt;/noscript
</code></pre>

<p>これでAMPの基本設定はOKです。</p>

<p>実際のコードはリポジトリを参照してみてください。</p>

<ul>
  <li>
    <p><a href="https://github.com/shoyan/aminima/blob/master/_includes/head.html">https://github.com/shoyan/aminima/blob/master/_includes/head.html</a></p>  </li>
</ul>

<h3 id="amp-analyticsを使う">amp-analyticsを使う</h3>

<p>通常のAnalyticsのタグはAMPでは動かないのでamp-analyticsを使います。<br />
amp-analyticsはAMP用に用意されたコンポーネントです。</p>

<ul>
  <li>
    <p><a href="https://ampbyexample.com/components/amp-analytics/">https://ampbyexample.com/components/amp-analytics/</a></p>  </li>
</ul>

<p>テーマのソースコードはこの辺りです。</p>

<ul>
  <li>
    <p><a href="https://github.com/shoyan/aminima/blob/master/_includes/google-analytics.html">https://github.com/shoyan/aminima/blob/master/_includes/google-analytics.html</a></p>  </li>
</ul>

<h2 id="aminimaのインストール方法">Aminimaのインストール方法</h2>

<p>Jekyllをインストールしていない場合はjekyllをインストールしてください。</p>

<pre><code>$ gem install jekyll
</code></pre>

<p>ブログを作成します。</p>

<pre><code>$ jekyll new blog

</code></pre>

<p>Gemfileを編集します。</p>

<pre><code>以下のように書き換える

gem "minima", "~&gt; 2.0"
↓
gem "aminima"
</code></pre>

<p><code>_config.yml</code> のthemeを編集します。</p>

<pre><code>theme: aminima
</code></pre>

<p>bundleコマンドを実行します。</p>

<pre><code>$ bundle
</code></pre>

<p>サーバーを立ち上げます。</p>

<pre><code>$ jekyll server
</code></pre>

<p>ブラウザで http://localhost:4000 にアクセスすればサイトが表示されます。</p>

<p>動かない部分や不明な点はコメント欄や<a href="https://twitter.com/sinn_shoyan">Twitter</a>などでお気軽にご連絡ください！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jekyllチュートリアル]]></title>
    <link href="https://48n.jp/blog/2016/12/06/jekyll-tutorial-01/"/>
    <updated>2016-12-06T23:49:36+09:00</updated>
    <id>https://48n.jp/blog/2016/12/06/jekyll-tutorial-01</id>
    <content type="html"><![CDATA[<p>最近、ブログをリニューアルしようとJekyllをちょこちょこ触っている。<br />
ブログを作る上でJekyllで知っておいたほうが良いことをまとめていきたいと思う。</p>

<h2 id="jekyllとは">Jekyllとは</h2>

<p>Jekyllは静的なサイトを作ることに特化したツールだ。<br />
Ruby製でGithub pagesでも利用されている。<br />
内部的には<a href="https://github.com/Shopify/liquid/wiki">Liquid</a>が使われている。<br />
Liquidはテンプレートエンジンで変数や制御文(foreachとか)を使うことができる。<br />
Jekyllはそれをラップしたものだ。<br />
Jekyllの何が便利かというと、サイトの設定をymlファイルで管理したりJekyllコマンドでMarkdownからhtmlファイルを生成したりすることができるという点だ。<br />
また、サードパーティ製のテーマを利用できたりもする。</p>

<h2 id="ドキュメント">ドキュメント</h2>

<p>Jekyllはドキュメントがなかなかしっかりしているので、公式のドキュメントを見るのがよい。</p>
<ul>
  <li>
    <p><a href="https://jekyllrb.com/">https://jekyllrb.com/</a></p>  </li>
</ul>

<p>日本語版も用意してある。</p>
<ul>
  <li>
    <p><a href="https://jekyllrb-ja.github.io/">https://jekyllrb-ja.github.io/</a></p>  </li>
</ul>

<p>まずドキュメントを探してみて、わからなければググるという感じで自分は調べている。</p>

<h2 id="目次">目次</h2>

<ul>
  <li>Jekyllをはじめよう</li>
  <li>Jekyllの構成について</li>
  <li>Jekyllのテーマを作成する</li>
</ul>
]]></content>
  </entry>
  
</feed>
